
import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Label } from '@/components/ui/label';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { toast } from 'sonner';
import { Language } from 'lucide-react';

interface LanguageOption {
  code: string;
  name: string;
  flag: string;
}

const LanguageSettings: React.FC = () => {
  const [nativeLanguage, setNativeLanguage] = useState('uk');
  const [learningLanguage, setLearningLanguage] = useState('en');
  const [isLoading, setIsLoading] = useState(false);

  const nativeLanguages: LanguageOption[] = [
    { code: 'uk', name: '–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞', flag: 'üá∫üá¶' },
    { code: 'en', name: 'English', flag: 'üá∫üá∏' },
    { code: 'ru', name: '–†—É—Å—Å–∫–∏–π', flag: 'üá∑üá∫' },
    { code: 'pl', name: 'Polski', flag: 'üáµüá±' },
    { code: 'de', name: 'Deutsch', flag: 'üá©üá™' },
  ];

  const learningLanguages: LanguageOption[] = [
    { code: 'en', name: 'English', flag: 'üá∫üá∏' },
    { code: 'de', name: 'Deutsch', flag: 'üá©üá™' },
    { code: 'fr', name: 'Fran√ßais', flag: 'üá´üá∑' },
    { code: 'es', name: 'Espa√±ol', flag: 'üá™üá∏' },
    { code: 'it', name: 'Italiano', flag: 'üáÆüáπ' },
    { code: 'pl', name: 'Polski', flag: 'üáµüá±' },
    { code: 'pt', name: 'Portugu√™s', flag: 'üáµüáπ' },
    { code: 'ja', name: 'Êó•Êú¨Ë™û', flag: 'üáØüáµ' },
    { code: 'ko', name: 'ÌïúÍµ≠Ïñ¥', flag: 'üá∞üá∑' },
    { code: 'zh', name: '‰∏≠Êñá', flag: 'üá®üá≥' },
  ];

  const handleSave = async () => {
    if (nativeLanguage === learningLanguage) {
      toast.error('–†—ñ–¥–Ω–∞ –º–æ–≤–∞ —Ç–∞ –º–æ–≤–∞ –¥–ª—è –≤–∏–≤—á–µ–Ω–Ω—è –Ω–µ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –æ–¥–Ω–∞–∫–æ–≤–∏–º–∏');
      return;
    }

    setIsLoading(true);
    
    // –ó–∞—Ö–∞—Ä–¥–∫–æ–¥–∂–µ–Ω–∞ –ª–æ–≥—ñ–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –º–æ–≤
    setTimeout(() => {
      toast.success('–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–æ–≤ –∑–±–µ—Ä–µ–∂–µ–Ω–æ');
      setIsLoading(false);
    }, 1000);
  };

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center space-x-2">
          <Language className="w-5 h-5" />
          <span>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–æ–≤</span>
        </CardTitle>
        <CardDescription>
          –û–±–µ—Ä—ñ—Ç—å –≤–∞—à—É —Ä—ñ–¥–Ω—É –º–æ–≤—É —Ç–∞ –º–æ–≤—É –¥–ª—è –≤–∏–≤—á–µ–Ω–Ω—è
        </CardDescription>
      </CardHeader>
      <CardContent className="space-y-6">
        <div className="space-y-3">
          <Label htmlFor="native-language">–í–∞—à–∞ —Ä—ñ–¥–Ω–∞ –º–æ–≤–∞ (–º–æ–≤–∞ –ø–µ—Ä–µ–∫–ª–∞–¥—É)</Label>
          <Select value={nativeLanguage} onValueChange={setNativeLanguage}>
            <SelectTrigger>
              <SelectValue placeholder="–û–±–µ—Ä—ñ—Ç—å –≤–∞—à—É —Ä—ñ–¥–Ω—É –º–æ–≤—É" />
            </SelectTrigger>
            <SelectContent>
              {nativeLanguages.map((lang) => (
                <SelectItem key={lang.code} value={lang.code}>
                  <div className="flex items-center space-x-2">
                    <span>{lang.flag}</span>
                    <span>{lang.name}</span>
                  </div>
                </SelectItem>
              ))}
            </SelectContent>
          </Select>
          <p className="text-sm text-muted-foreground">
            –ú–æ–≤–∞, –Ω–∞ —è–∫—ñ–π –±—É–¥—É—Ç—å –ø–æ–∫–∞–∑–∞–Ω—ñ –ø–µ—Ä–µ–∫–ª–∞–¥–∏ —Å–ª—ñ–≤ –Ω–∞ —Ñ–ª–µ—à-–∫–∞—Ä—Ç–æ—á–∫–∞—Ö
          </p>
        </div>

        <div className="space-y-3">
          <Label htmlFor="learning-language">–ú–æ–≤–∞ –¥–ª—è –≤–∏–≤—á–µ–Ω–Ω—è</Label>
          <Select value={learningLanguage} onValueChange={setLearningLanguage}>
            <SelectTrigger>
              <SelectValue placeholder="–û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É –¥–ª—è –≤–∏–≤—á–µ–Ω–Ω—è" />
            </SelectTrigger>
            <SelectContent>
              {learningLanguages.map((lang) => (
                <SelectItem key={lang.code} value={lang.code}>
                  <div className="flex items-center space-x-2">
                    <span>{lang.flag}</span>
                    <span>{lang.name}</span>
                  </div>
                </SelectItem>
              ))}
            </SelectContent>
          </Select>
          <p className="text-sm text-muted-foreground">
            –ú–æ–≤–∞, —Å–ª–æ–≤–∞ —è–∫–æ—ó –≤–∏ –±—É–¥–µ—Ç–µ –≤–∏–≤—á–∞—Ç–∏
          </p>
        </div>

        <Button onClick={handleSave} disabled={isLoading} className="w-full">
          {isLoading ? '–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è...' : '–ó–±–µ—Ä–µ–≥—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è'}
        </Button>
      </CardContent>
    </Card>
  );
};

export default LanguageSettings;
